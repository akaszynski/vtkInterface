name: Unit Testing

on: [push, pull_request, workflow_dispatch]

jobs:
  # macOS:
  #   runs-on: macos-latest
  #   name: Mac OS Unit Testing
  #   strategy:
  #     matrix:
  #       python-version: ['3.6', '3.7', '3.8']

  #   env:
  #     ALLOW_PLOTTING: true
  #     SHELLOPTS: 'errexit:pipefail'

  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Set up Python ${{ matrix.python-version }}
  #       uses: actions/setup-python@v1
  #       with:
  #         python-version: ${{ matrix.python-version }}

  #     - name: Install PyVista
  #       run: |
  #         python -m pip install wheel
  #         python -m pip install -e .
  #         python -c "import pyvista; print(pyvista.Report(gpu=False))"

  #     - name: Install test dependencies
  #       run: |
  #         python -m pip install -r requirements_test.txt

  #     - name: Unit testing
  #       run: |
  #         python -m pytest -v --cov pyvista --cov-report xml --durations=0


  LinuxConda:
    runs-on: ubuntu-latest
    env:
      CONDA_ALWAYS_YES: 1
      VTK.VERSION: 8.2
      conda_env: pyvista-vtk8.2

    steps:
      - name: Install headless display
        run: |
          chmod +x setup_headless_display.sh
          ./setup_headless_display.sh
        working-directory: ../../.ci

      - name: Create Anaconda environment
        run: |
          source /usr/share/miniconda/etc/profile.d/conda.sh
          conda config --add channels conda-forge
          conda create -n ${{ env.conda_env }} -y --quiet python=3.8 mamba
          conda activate ${{ env.conda_env }}
          sed -i -e 's/- vtk$/- vtk=${{ env.VTK.VERSION }}' environment.yml
          mamba env update -n ${{ env.conda_env }} --file environment.yml

      - name: Install PyVista
        run: |
          source /usr/share/miniconda/etc/profile.d/conda.sh
          conda activate ${{ env.conda_env }}
          pip install -e .
          conda list
          which python
          python -c "import pyvista; print(pyvista.Report(gpu=False))"

      - name: Test Core API
        run: |
          source /usr/share/miniconda/etc/profile.d/conda.sh
          conda activate ${{ env.conda_env }}
          pytest -v --ignore=tests/plotting

      - name: Test Core Plotting
        run: |
          source /usr/share/miniconda/etc/profile.d/conda.sh
          conda activate ${{ env.conda_env }}
          pytest -v tests/plotting --cov-report html

      - name: Test Package Docstrings
        run: |
          source /usr/share/miniconda/etc/profile.d/conda.sh
          conda activate ${{ env.conda_env }}
          pytest -v --doctest-modules pyvista
